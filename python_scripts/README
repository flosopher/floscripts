If you want to gain the people's ovation and fame forever, document your stuff here! 
List the files you've added and way briefly what kind of stuff is in them and their 
status (mostly, if they're for public consumption or not).  I'll start:


PackingMeasureUtils.py

	contains stuff for viewing "*_packing.pdb" files. Should mostly work, 
	so use these without fear (be careful what you use as radii though...).

	loadPackingPDB <file> , [<name for object>]

		loads a foo_packing.pdb file and colors it all pretty-like
		creates two selections along with the loaded object called
		NAMEcavities and NAMEprotein which are the heteratoms representing
		holes and everything else, respectively. Names can get pretty long,
		by pymol lets you do good stuff like "select NA*cav*", which will
		match a selection called NAMEISREALLYLONGcavities.
	
	expandRadii byamount, selection
	contractRadii byamount, selection
	These do just what they say. A rebuild is triggered, so they're not instantaneous
	
	useOccRadii selection
	useTempRadii selection
	will take VDW radii from PDB occ/bfac cols and use them as radii
	
	useTempColors selection
	useOccColors selection
	Colors by occ/bfac from pdb
	
	useRosettaRadii
	changes standard radii to match rosetta
	

PDBBrowser.py

	contains some quick and dirty functions for browsing a bunch of PDBs
	Experimental! My not work right for you.
	
	loadFromGlob pattern, name=None, native=None, delete=True, pickrandom=F

		This takes a shell style pattern like ~/mypdbs/foobar_*_packing.pdb and
		loads one of the files. If the file ends with _packing.pdb[.gz] it uses
		loadPackingPdb. If pattern is just a directory, it'll browse the .pdb/.pdb.gz
		files in that dir
		pickrand = True, it'll pick a random one. 
		name = optional name for loaded objcet
		native arg provides a native for reference, although I don't think 
		does anything as yet.
	
	loadPrev / loadNext
	go back and fourth in the structures you've browsed. this will actually
	load and delete them, so they don't have to stay in pymol. uses the globals
	LOADLIST and POINTER.
	
	browseReset
	resets browsing history (LOADLIST and POINTER)
	
