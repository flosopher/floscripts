#!/usr/bin/perl


# script to read in a resfile, determine which positions are variable and output
# the corresponding positions
#
# Florian Richter, Baker lab, 05/2007
#


use strict;

sub usage {
  printf STDERR "\n";
  printf STDERR "usage: give name of resfile \n";
  printf STDERR "\n";
  exit 1;
}


my $resfile;
my $mode;
if($#ARGV== -1) {&usage();}

while ($#ARGV>=0) {    # comment: $# means "index to last element of the array
  if ($ARGV[0] eq "-help" || $ARGV[0] eq "-h") {
    &usage();
  } else {
    $resfile = shift(@ARGV);
    $mode = shift(@ARGV);
    }
}

my $inline;
my @DesPositions;
my $ala_resfile;
my $i=0;

open(RFILE,$resfile);

if($mode eq "ala") { 
    $ala_resfile = substr($resfile,0,4);
    substr($ala_resfile,4) = '_polyA.resfile';
    open(ALAFILE,'>',$ala_resfile);
}
 
#get rid of first block of comments in resfile generated by lins script
$inline = <RFILE>;

if($mode eq "ala") {
    printf ALAFILE "%s", $inline; 
}
my @dumpbuf = split(' ',$inline);

while($dumpbuf[0] ne "start") {
    $inline = <RFILE>;
    @dumpbuf = split(' ',$inline);
    
	if($mode eq "ala") {
	    printf ALAFILE "%s", $inline; 
	}
}

#comments are dealt with, now begin to read actual resinfo


my $res_counter=0;


while($inline=<RFILE>) {
    chomp;
    $res_counter++;
    my @linearray = split(' ',$inline);
    
    if ($linearray[3] ne "NATAA" && $linearray[3] ne "NATRO" ) {
	#printf STDERR "check %s,\n",$linearray[3];
        $DesPositions[$i] = $linearray[2];
	$i++;

	if($mode eq "ala") {
	    printf ALAFILE "%s", substr($inline,0,13);
	    printf ALAFILE "PIKAA  A  \n"
	}
    }

    elsif($mode eq "ala") { printf ALAFILE "%s", $inline;

    }
}

close RFILE;

my $ligline;
my $lig_resnum = $res_counter+1;

if($res_counter > 98 && $res_counter < 999) {
    $ligline = " A  $lig_resnum  $lig_resnum NATRO   \n";
}
elsif ($res_counter > 8 && $res_counter < 99) {
    $ligline = " A   $lig_resnum   $lig_resnum NATRO   \n";
}
else {printf STDERR "Error: Protein has too many or too little residues for this overhastedly written script to work\n";
      exit 1;
}

#printf STDERR $lig_resnum;
#printf STDERR $ligline;

open(R2FILE,'>>',$resfile);
printf R2FILE $ligline;
close R2FILE;

if($mode eq "ala") {
    printf ALAFILE $ligline;
    close ALAFILE;
}

printf STDERR "%s: Total variable residues is %s. Last variable residue: %s \n",substr($resfile,0,4),$i,$DesPositions[$i-1];

for (my $ii = 0; $ii <= $i; $ii++) {
    printf STDOUT "%s ", $DesPositions[$ii];
}
printf STDOUT "\n";

	

